# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:22.04
Stage: build

%files
    .

%post
    apt-get update
    apt-get -y install --no-install-recommends g++ g++-multilib make
	./pgp-landmarks-strips/scripts/compile_validator.sh


# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:22.04
Stage: run

# Copy planner binary and required files from Stage 1.
%files from build
    validator_strips.bin
    PDDLtranslator.py

%post
	## Install only dependencies for running the learner.
    apt-get update
    apt-get -y install --no-install-recommends python3 python3-pip
    pip3 install tarski==0.8.2
    ## Remove unnecessary files to keep the image small.
    apt-get clean
    rm -rf /var/lib/apt/lists/*

%runscript
    #! /bin/bash
    set -euo pipefail
    DOMAIN_KNOWLEDGE_FILE="$1"
    DOMAIN_FILE="$2"
    PROBLEM_FILE="$3"
    PLAN_FILE="$4"

	echo "DK=$DOMAIN_KNOWLEDGE_FILE Domain=$DOMAIN_FILE Problem=$PROBLEM_FILE Plan File=$PLAN_FILE"
    python3 /PDDLtranslator.py "$DOMAIN_FILE" "$PROBLEM_FILE"
    mv ./problem.txt ./1.txt
    /validator_strips.bin "$DOMAIN_KNOWLEDGE_FILE" ""
    mv ./plan.1 "$PLAN_FILE"

%labels
Name        Progressive Generalized Planner
Description Fixed configuration of PGP for any given training tasks.
Authors     Javier Segovia-Aguas <javier.segovia@upf.edu>, Sergio Jiménez <serjice@dsic.upv.es>, Laura Sebastiá <lsebastia@dsic.upv.es>, Anders Jonsson <anders.jonsson@upf.edu>
License     GPL 3
Tracks      single-core
SupportsDerivedPredicates                       no
SupportsUniversallyQuantifiedPreconditions      no
SupportsExistentiallyQuantifiedPreconditions    no
SupportsUniversallyQuantifiedEffects            no
SupportsNegativePreconditions                   yes
SupportsEqualityPreconditions                   yes
SupportsInequalityPreconditions                 yes
SupportsConditionalEffects                      no
SupportsImplyPreconditions                      no